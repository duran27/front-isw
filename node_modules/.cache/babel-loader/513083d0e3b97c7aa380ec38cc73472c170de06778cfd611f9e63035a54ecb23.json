{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Desktop\\\\isw\\\\nombre-del-proyecto\\\\src\\\\components\\\\ActualizarStock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActualizarStock = () => {\n  _s();\n  const [id_producto, setIdProducto] = useState('');\n  const [nombre_producto, setNombreProducto] = useState('');\n  const [stock, setNuevoStock] = useState(0);\n  const [error, setError] = useState('');\n\n  // Función para buscar el producto por ID\n  const buscarProducto = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/productos/${id_producto}`);\n      const data = await response.json();\n      setNombreProducto(data.nombre_producto);\n      setNuevoStock(data.stock);\n      setError('');\n    } catch (error) {\n      console.error('Error al buscar el producto:', error);\n      setError('Producto no encontrado');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: buscarProducto,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID del Producto:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: id_producto,\n        onChange: e => setIdProducto(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nombre del Producto:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nombre_producto,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nuevo Stock:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: stock,\n        onChange: e => setNuevoStock(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \"      \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Consultar Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ActualizarStock, \"pr3EixIVLoJpUamY5ogX4dGFUIs=\");\n_c = ActualizarStock;\nexport default ActualizarStock;\nvar _c;\n$RefreshReg$(_c, \"ActualizarStock\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ActualizarStock","_s","id_producto","setIdProducto","nombre_producto","setNombreProducto","stock","setNuevoStock","error","setError","buscarProducto","response","fetch","data","json","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","readOnly","parseInt","className","_c","$RefreshReg$"],"sources":["C:/Users/nicol/Desktop/isw/nombre-del-proyecto/src/components/ActualizarStock.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ActualizarStock: React.FC = () => {\r\n  const [id_producto, setIdProducto] = useState('');\r\n  const [nombre_producto, setNombreProducto] = useState('');\r\n  const [stock, setNuevoStock] = useState(0);\r\n  const [error, setError] = useState('');\r\n\r\n  // Función para buscar el producto por ID\r\n  const buscarProducto = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/productos/${id_producto}`);\r\n      const data = await response.json();\r\n      setNombreProducto(data.nombre_producto);\r\n      setNuevoStock(data.stock);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error('Error al buscar el producto:', error);\r\n      setError('Producto no encontrado');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={buscarProducto}>\r\n      <div>\r\n        <label>ID del Producto:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={id_producto}\r\n          onChange={(e) => setIdProducto(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Nombre del Producto:</label>\r\n        <input type=\"text\" value={nombre_producto} readOnly />\r\n      </div>\r\n      <div>\r\n        <label>Nuevo Stock:</label>\r\n        <input type=\"number\" value={stock} onChange={(e) => setNuevoStock(parseInt(e.target.value))} />      </div>\r\n      <button type=\"submit\">Consultar Stock</button>\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ActualizarStock;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}