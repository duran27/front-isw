{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Desktop\\\\isw\\\\nombre-del-proyecto\\\\src\\\\components\\\\ActualizarStock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActualizarStock = () => {\n  _s();\n  const [id_producto, setIdProducto] = useState('');\n  const [nombre_producto, setNombreProducto] = useState('');\n  const [nuevoStock, setNuevoStock] = useState(0);\n  const [error, setError] = useState('');\n\n  // Función para buscar el producto por ID o nombre\n  const buscarProducto = async searchValue => {\n    try {\n      const response = await fetch(`http://localhost:5000/productos?search=${searchValue}`);\n      const data = await response.json();\n      if (data.length > 0) {\n        setNombreProducto(data[0].nombre_producto);\n        setError('');\n      } else {\n        setError('Producto no encontrado');\n      }\n    } catch (error) {\n      console.error('Error al buscar el producto:', error);\n      setError('Error en la búsqueda');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isNaN(nuevoStock)) {\n      setError('El nuevo stock debe ser un número');\n      return;\n    }\n    try {\n      const searchValue = id_producto || nombre_producto;\n      const response = await fetch(`http://localhost:5000/productos?search=${searchValue}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          stock: nuevoStock\n        })\n      });\n      if (response.ok) {\n        alert('Stock actualizado exitosamente');\n      } else {\n        alert('Error al actualizar el stock');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID o Nombre del Producto:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: id_producto || nombre_producto,\n        onChange: e => {\n          if (/^\\d+$/.test(e.target.value)) {\n            setIdProducto(e.target.value);\n            setNombreProducto('');\n          } else {\n            setIdProducto('');\n            setNombreProducto(e.target.value);\n          }\n          buscarProducto(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nuevo Stock:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: nuevoStock,\n        onChange: e => setNuevoStock(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Actualizar Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ActualizarStock, \"BX6Y41SexaDcrGt3hwQNG5DNxrE=\");\n_c = ActualizarStock;\nexport default ActualizarStock;\nvar _c;\n$RefreshReg$(_c, \"ActualizarStock\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ActualizarStock","_s","id_producto","setIdProducto","nombre_producto","setNombreProducto","nuevoStock","setNuevoStock","error","setError","buscarProducto","searchValue","response","fetch","data","json","length","console","handleSubmit","e","preventDefault","isNaN","method","headers","body","JSON","stringify","stock","ok","alert","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","test","target","Number","_c","$RefreshReg$"],"sources":["C:/Users/nicol/Desktop/isw/nombre-del-proyecto/src/components/ActualizarStock.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ActualizarStock: React.FC = () => {\r\n  const [id_producto, setIdProducto] = useState('');\r\n  const [nombre_producto, setNombreProducto] = useState('');\r\n  const [nuevoStock, setNuevoStock] = useState(0);\r\n  const [error, setError] = useState('');\r\n\r\n  // Función para buscar el producto por ID o nombre\r\n  const buscarProducto = async (searchValue: string) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/productos?search=${searchValue}`);\r\n      const data = await response.json();\r\n      if (data.length > 0) {\r\n        setNombreProducto(data[0].nombre_producto);\r\n        setError('');\r\n      } else {\r\n        setError('Producto no encontrado');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al buscar el producto:', error);\r\n      setError('Error en la búsqueda');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (isNaN(nuevoStock)) {\r\n      setError('El nuevo stock debe ser un número');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const searchValue = id_producto || nombre_producto;\r\n      const response = await fetch(`http://localhost:5000/productos?search=${searchValue}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ stock: nuevoStock }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Stock actualizado exitosamente');\r\n      } else {\r\n        alert('Error al actualizar el stock');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>ID o Nombre del Producto:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={id_producto || nombre_producto}\r\n          onChange={(e) => {\r\n            if (/^\\d+$/.test(e.target.value)) {\r\n              setIdProducto(e.target.value);\r\n              setNombreProducto('');\r\n            } else {\r\n              setIdProducto('');\r\n              setNombreProducto(e.target.value);\r\n            }\r\n            buscarProducto(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Nuevo Stock:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={nuevoStock}\r\n          onChange={(e) => setNuevoStock(Number(e.target.value))}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Actualizar Stock</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ActualizarStock;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}